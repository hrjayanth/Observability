services:
  tempo:
    image: grafana/tempo:r218-6a1bd93
    container_name: tempo-201
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./resources/tempo.yaml:/etc/tempo.yaml
    networks:
      - telemetry
    ports:
      - "3200:3200"
    restart: always

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.136.0
    container_name: otel-collector-201
    command: ["--config=/etc/otelcol/config.yaml"]
    volumes:
      - ./resources/collector-config.yaml:/etc/otelcol/config.yaml
    ports:
      - "4317:4317"
      - "4318:4318"
    depends_on:
      - tempo
    networks:
      - telemetry
    restart: always

  prometheus:
    image: prom/prometheus:v3.1.0
    container_name: prometheus-201
    volumes:
      - ./resources/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.enable-lifecycle"
    ports:
      - "9090:9090"
    networks:
      - telemetry
    restart: always

  mimir:
    image: grafana/mimir:latest
    container_name: mimir-201
    command: [ "-config.file=/etc/mimir/config.yaml" ]
    volumes:
      - ./resources/mimir-config.yaml:/etc/mimir/config.yaml
      - mimir_data:/data
    ports:
      - "9009:9009"
    networks:
      - telemetry
    restart: always

  loki:
    image: grafana/loki:3.0.0
    container_name: loki-201
    command: ["-config.file=/etc/loki/config.yml"]
    volumes:
      - ./resources/loki-config.yml:/etc/loki/config.yml
      - loki_data:/loki
    ports:
      - "3100:3100"
    networks:
      - telemetry
    restart: always

  fluent-bit:
    image: fluent/fluent-bit:3.0
    container_name: fluent-bit-201
    ports:
      - "24224:24224"
    volumes:
      - ./resources/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf:ro
#      - ./resources/parsers.conf:/fluent-bit/etc/parsers.conf:ro
    networks:
      - telemetry
    restart: always

  grafana:
    image: grafana/grafana:12.2
    container_name: grafana-201
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - tempo
      - prometheus
      - loki
      - mimir
    networks:
      - telemetry
    restart: always

volumes:
  prometheus_data:
  mimir_data:
  loki_data:

networks:
  telemetry:
    driver: bridge
